## Select the Last and First name of each empoloyee as well as the Name and Title of the person they report to
SELECT e.LastName, e.FirstName, e.Title,
s.LastName AS SupervisorLastName,
s.FirstName AS SupervisorFirstName,
s.Title AS SupervisorTitle
FROM employees e
LEFT JOIN employees s ON e.ReportsTo = s.EmployeeId
ORDER BY e.LastName;

## Select the customers from the USA
SELECT C.LastName, C.FirstName, C.Country
FROM chinook.customers C
WHERE C.Country='USA'
ORDER BY C.LastName;

## Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT LastName, FirstName, CustomerID, Country
FROM chinook.customers
WHERE Country <> 'USA'
ORDER BY LastName;

## Show only the Customers from Brazil.
SELECT LastName, FirstName, Country
FROM chinook.customers
WHERE Country='Brazil'
ORDER BY LastName;

## Find the Invoices of customers who are from Brazil.
## The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT C.LastName, C.FirstName, I.InvoiceID, I.InvoiceDate, I.BillingCountry
FROM chinook.customers C
LEFT JOIN chinook.invoices I
ON c.CustomerID=I.CustomerID
WHERE I.BillingCountry='Brazil'
ORDER BY C.LastName;

## Show the Employees who are Sales Agents.
SELECT LastName, FirstName, Title
FROM employees
WHERE Title = 'Sales Support Agent';

## Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices
ORDER BY BillingCountry;

## Provide a query that shows the invoices associated with each sales agent.
## The resulting table should include the Sales Agent's full name.
SELECT E.LastName, E.FirstName, I.InvoiceId
FROM chinook.invoices I
JOIN chinook.customers C
ON i.invoiceId=C.customerId
JOIN chinook.employees E
ON C.SupportRepId=E.EmployeeId
ORDER BY E.LastName;

## Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT C.LastName, C.FirstName, I.InvoiceID, I. Total, C.Country, E.LastName, E.FirstName
FROM chinook.invoices I
JOIN chinook.customers C
ON i.invoiceId=C.customerId
JOIN chinook.employees E
ON C.SupportRepId=E.EmployeeId
ORDER BY C.LastName;

## How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate LIKE '%2009%';

## What are the total sales for 2009?
SELECT SUM(total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

## Write a query that includes the purchased track name with each invoice line ID.
SELECT I.InvoiceLineID, tracks.Name
FROM tracks
JOIN invoice_items I
ON tracks.TrackID=I.TrackID
ORDER BY InvoiceLineID;

## Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT I.InvoiceLineID, tracks.Name, artists.Name
FROM tracks
JOIN invoice_items I
ON tracks.TrackId=I.TrackId
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON albums.ArtistId=artists.ArtistId
ORDER BY InvoiceLineID;

## Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name, albums.Title, M.Name AS media_type, genres.Name AS genre
FROM tracks
JOIN albums
ON tracks.AlbumId=albums.AlbumId
JOIN artists
ON albums.ArtistId=artists.ArtistID
JOIN media_types M
ON tracks.MediaTypeid=M.MediaTypeid
JOIN genres
ON tracks.GenreId=genres.GenreId;

## Show the total sales made by each sales agent.
SELECT emp.LastName, emp.FirstName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.LastName;


## Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
